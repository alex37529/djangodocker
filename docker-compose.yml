version: '2.1'
services:

  project:
    build:
      context: ./
    env_file: .env
    working_dir: /app
    restart: "always"
    depends_on:
     - postgresql
    # command: bash -c "sleep 3 && /etc/init.d/ssh start && python3 /app/manage.py runserver 0.0.0.0:8000"
    # command: bash -c "sleep 3 && /etc/init.d/ssh start && uwsgi --http 0.0.0.0:8000 --module djangodocker.wsgi"
    command: bash -c "sleep 3 && /etc/init.d/ssh start && gunicorn -b 0.0.0.0:8000 --reload -w 1 --log-file - --log-level info --capture-output --max-requests 1000 --timeout 30 djangodocker.wsgi"
    # uwsgi --http 0.0.0.0:8000 --module djangodocker.wsgi"
    # supervisord -c /djangodocker/supervisord.conf -n"
    volumes:
      #- /work/djangodocker:/djangodocker
      #- ./.env:/app/.env
      - ./djangodocker:/app/djangodocker
      #- ./dockerfiles/sshdconf/sshd_config:/etc/ssh/sshd_config
      #- ./dockerfiles/id_rsa.pub:/root/.ssh/authorized_keys
      #- /home/alex/.PyCharm2018.1/:/root/.pycharm_helpers/
      #- ./dockerfiles/logs/supervisord.conf:/app/logs/supervisord.conf
      #- ./djangod.conf:/app/djangod.conf
      - ./logs:/app/logs

    links:
      - postgresql
    ports:
      - "2225:22"
      - "8005:8000"

  postgresql:
    image: postgres:9.6-alpine
    env_file: .env
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "5432:5432"

  nginx:
    build:
      context: ./nginx
    restart: "always"
    depends_on:
      - project
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/app/logs
    ports:
      - "8007:8007"
